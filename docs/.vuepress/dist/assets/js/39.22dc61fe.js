(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{416:function(r,t,o){"use strict";o.r(t);var a=o(23),e=Object(a.a)({},(function(){var r=this,t=r.$createElement,o=r._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[o("h2",{attrs:{id:"for-in-和-for-of"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#for-in-和-for-of"}},[r._v("#")]),r._v(" for in 和 for of")]),r._v(" "),o("h3",{attrs:{id:"有什么区别"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#有什么区别"}},[r._v("#")]),r._v(" 有什么区别")]),r._v(" "),o("p",[r._v("for...in 遍历得到 key\nfor...of 遍历得到 value")]),r._v(" "),o("h4",{attrs:{id:"for-in-的原理"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#for-in-的原理"}},[r._v("#")]),r._v(" for in 的原理")]),r._v(" "),o("p",[r._v("for...in 语句以任意顺序迭代一个对象的除Symbol以外的可枚举属性，包括继承的可枚举属性")]),r._v(" "),o("p",[o("code",[r._v("如果不想遍历原型属性和索引，可以使用Object.keys遍历对象")])]),r._v(" "),o("ol",[o("li",[r._v("for in 有可能会乱序")]),r._v(" "),o("li",[r._v("返回索引 为字符串型")]),r._v(" "),o("li",[r._v("会遍历 原型属性和索引")])]),r._v(" "),o("h3",{attrs:{id:"for-of-的原理"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#for-of-的原理"}},[r._v("#")]),r._v(" for of 的原理")]),r._v(" "),o("p",[r._v("for of 是基于Iterator(迭代器的) 只要拥有Iterator 机制的数据结构都能用for of 循环（数组对象/字符串/map/set等）")]),r._v(" "),o("ol",[o("li",[r._v("不会遍历 原型属性和索引")])])])}),[],!1,null,null,null);t.default=e.exports}}]);